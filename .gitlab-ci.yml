default:
  image: node:16.14.2-alpine3.15
  #cache:
  #  key: ${CI_COMMIT_REF_SLUG}
  #  paths:
  #    - node_modules/

stages:
  - test
  - build
  - deploy

sonarqube-check:
  stage: test
  tags:
    - docker
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  before_script:
    - apk add npm --no-cache
  script:
    - npm install
    - npm run test:coverage
    - sonar-scanner
  allow_failure: true
  only:
    - xyza

build:
  stage: build
  tags:
    - docker
  script:
    - cp "$DOT_ENV_LOCAL_FILE" ./.env
    - npm install
    - npm run build
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://${FRONT_DOMAIN_NAME}
  only:
    - main
    - prod
  artifacts:
    paths:
    - build
    expire_in: 1 hour

deploy:
  image:
    name: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
    # domyslnie entrypoint w tym imagu wskazuje na /bin/aws
    # chcemy zadzialac troche bardziej w tym dockerze wiec to usuwamy
    entrypoint: [""]
  only:
    - main
    - prod
  stage: deploy
  tags:
    - docker
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: https://${FRONT_DOMAIN_NAME}
  script:
    - aws s3 sync --delete ./build/ s3://${FRONT_DOMAIN_NAME}/
